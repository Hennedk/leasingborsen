import { VWPDFProcessor } from './src/lib/processors/vwPDFProcessor.js'

async function testSchemaFix() {
  console.log('üß™ Testing VW PDF batch processing with schema fixes...')
  
  const processor = new VWPDFProcessor()
  
  // Create a mock File object that mimics the real PDF
  const mockFile = {
    name: 'VolkswagenLeasingpriser.pdf',
    size: 245760,
    type: 'application/pdf'
  }
  
  try {
    console.log('\nüì§ Testing complete batch processing workflow...')
    
    // Test the main processing function
    const result = await processor.processPDF(
      'seller-123', // Mock seller ID
      mockFile,
      'admin@test.com'
    )
    
    console.log('\n‚úÖ Batch processing completed successfully!')
    console.log(`üìä Batch ID: ${result.batchId}`)
    console.log(`üìù Items created: ${result.itemsCreated}`)
    console.log(`üìà Stats:`, result.stats)
    
    console.log('\nüîç Testing batch details retrieval...')
    const batchDetails = await processor.getBatchDetails(result.batchId)
    console.log(`üìã Batch has ${batchDetails.items.length} items`)
    
    console.log('\nüéØ Testing approval workflow...')
    const itemIds = batchDetails.items.map(item => item.id)
    const approvalResult = await processor.applyApprovedChanges(result.batchId, itemIds)
    
    console.log('\nüéâ Complete workflow test successful!')
    console.log(`‚úÖ Applied: ${approvalResult.applied}`)
    console.log(`‚ûï Created: ${approvalResult.created}`)
    console.log(`üìù Updated: ${approvalResult.updated}`)
    console.log(`üóëÔ∏è Deleted: ${approvalResult.deleted}`)
    console.log(`‚ùå Errors: ${approvalResult.errors.length}`)
    
    if (approvalResult.errors.length > 0) {
      console.log('\n‚ö†Ô∏è Errors encountered:')
      approvalResult.errors.forEach((error, i) => {
        console.log(`  ${i + 1}. Item ${error.itemId}: ${error.error}`)
      })
    }
    
  } catch (error) {
    console.error('\n‚ùå Test failed:', error.message)
    console.error('Full error:', error)
  }
}

// Run the test
testSchemaFix().catch(console.error)
{
  "name": "pdf-processing-monitoring",
  "version": "1.0.0",
  "description": "Production monitoring and alerting system for PDF processing pipeline",
  "main": "monitoring-service.js",
  "type": "module",
  "scripts": {
    "start": "node monitoring-service.js",
    "dev": "nodemon monitoring-service.js",
    "build": "npm run build:monitoring && npm run build:dashboard",
    "build:monitoring": "tsc -p tsconfig.monitoring.json",
    "build:dashboard": "vite build",
    "test": "vitest",
    "test:monitoring": "node scripts/test-monitoring.js",
    "test:load": "node scripts/load-test.js",
    "test:alerts": "node scripts/test-alerts.js",
    "lint": "eslint . --ext .js,.ts,.tsx",
    "lint:fix": "eslint . --ext .js,.ts,.tsx --fix",
    "monitoring:start": "pm2 start ecosystem.config.js",
    "monitoring:stop": "pm2 stop monitoring-service",
    "monitoring:restart": "pm2 restart monitoring-service",
    "monitoring:status": "node scripts/check-monitoring-status.js",
    "monitoring:health": "curl -f http://localhost:3000/health-check",
    "monitoring:dashboard": "node scripts/open-dashboard.js",
    "monitoring:export": "node scripts/export-metrics.js",
    "monitoring:cleanup": "node scripts/cleanup-monitoring.js",
    "monitoring:test-notifications": "node scripts/test-notifications.js",
    "db:migrate": "supabase db push",
    "db:reset": "supabase db reset",
    "db:test": "node scripts/test-db-connection.js",
    "db:backup": "node scripts/backup-database.js",
    "db:cleanup": "node scripts/cleanup-monitoring.js",
    "alerts:test": "node scripts/test-alerts.js",
    "alerts:list": "node scripts/list-active-alerts.js",
    "alerts:acknowledge": "node scripts/acknowledge-alert.js",
    "alerts:resolve": "node scripts/resolve-alert.js",
    "metrics:collect": "node scripts/collect-metrics.js",
    "metrics:analyze": "node scripts/analyze-metrics.js",
    "metrics:export": "node scripts/export-metrics.js",
    "metrics:import": "node scripts/import-metrics.js",
    "sla:report": "node scripts/generate-sla-report.js",
    "sla:check": "node scripts/check-sla-compliance.js",
    "health:check": "node scripts/health-check.js",
    "health:report": "node scripts/generate-health-report.js",
    "performance:analyze": "node scripts/analyze-performance.js",
    "performance:benchmark": "node scripts/benchmark-system.js",
    "capacity:report": "node scripts/generate-capacity-report.js",
    "capacity:forecast": "node scripts/forecast-capacity.js",
    "deploy": "npm run build && npm run deploy:monitoring",
    "deploy:monitoring": "bash scripts/deploy-monitoring.sh",
    "deploy:functions": "supabase functions deploy --no-verify-jwt",
    "deploy:dashboard": "npm run build:dashboard && npm run deploy:static",
    "deploy:static": "bash scripts/deploy-dashboard.sh",
    "setup": "npm run setup:env && npm run setup:db && npm run setup:monitoring",
    "setup:env": "node scripts/setup-environment.js",
    "setup:db": "npm run db:migrate && node scripts/setup-database.js",
    "setup:monitoring": "node scripts/setup-monitoring.js",
    "backup:create": "node scripts/create-backup.js",
    "backup:restore": "node scripts/restore-backup.js",
    "backup:list": "node scripts/list-backups.js",
    "logs:monitoring": "pm2 logs monitoring-service",
    "logs:export": "node scripts/export-logs.js",
    "logs:analyze": "node scripts/analyze-logs.js",
    "security:scan": "npm audit && node scripts/security-scan.js",
    "security:check": "node scripts/security-check.js",
    "maintenance:start": "node scripts/maintenance-mode.js --enable",
    "maintenance:stop": "node scripts/maintenance-mode.js --disable",
    "maintenance:status": "node scripts/maintenance-status.js"
  },
  "dependencies": {
    "@supabase/supabase-js": "^2.38.0",
    "node-cron": "^3.0.3",
    "nodemailer": "^6.9.7",
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "compression": "^1.7.4",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1",
    "dotenv": "^16.3.1",
    "node-fetch": "^3.3.2",
    "uuid": "^9.0.1",
    "moment": "^2.29.4",
    "lodash": "^4.17.21",
    "joi": "^17.11.0",
    "bcryptjs": "^2.4.3",
    "jsonwebtoken": "^9.0.2",
    "rate-limiter-flexible": "^4.0.1",
    "sharp": "^0.32.6",
    "pdf-parse": "^1.1.1",
    "multer": "^1.4.5-lts.1",
    "axios": "^1.6.0",
    "pg": "^8.11.3",
    "redis": "^4.6.10"
  },
  "devDependencies": {
    "@types/node": "^20.8.7",
    "@types/express": "^4.17.20",
    "@types/cors": "^2.8.15",
    "@types/compression": "^1.7.4",
    "@types/multer": "^1.4.8",
    "@types/pg": "^8.10.7",
    "@types/uuid": "^9.0.6",
    "@types/lodash": "^4.14.200",
    "@types/bcryptjs": "^2.4.5",
    "@types/jsonwebtoken": "^9.0.4",
    "@typescript-eslint/eslint-plugin": "^6.9.0",
    "@typescript-eslint/parser": "^6.9.0",
    "eslint": "^8.52.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "prettier": "^3.0.3",
    "typescript": "^5.2.2",
    "nodemon": "^3.0.1",
    "vitest": "^0.34.6",
    "supertest": "^6.3.3",
    "@vitest/ui": "^0.34.6",
    "pm2": "^5.3.0",
    "vite": "^4.5.0",
    "@vitejs/plugin-react": "^4.1.0",
    "tailwindcss": "^3.3.5",
    "autoprefixer": "^10.4.16",
    "postcss": "^8.4.31"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/your-org/pdf-processing-monitoring.git"
  },
  "keywords": [
    "monitoring",
    "alerting",
    "pdf-processing",
    "supabase",
    "production",
    "sla",
    "metrics",
    "health-check",
    "dashboard"
  ],
  "author": "Your Organization",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/your-org/pdf-processing-monitoring/issues"
  },
  "homepage": "https://github.com/your-org/pdf-processing-monitoring#readme",
  "pm2": {
    "apps": [
      {
        "name": "monitoring-service",
        "script": "monitoring-service.js",
        "instances": 1,
        "autorestart": true,
        "watch": false,
        "max_memory_restart": "1G",
        "env": {
          "NODE_ENV": "production"
        },
        "error_file": "./logs/monitoring-error.log",
        "out_file": "./logs/monitoring-out.log",
        "log_file": "./logs/monitoring-combined.log",
        "time": true
      }
    ]
  },
  "monitoring": {
    "healthCheckUrl": "http://localhost:3000/health-check",
    "dashboardUrl": "http://localhost:3000/dashboard",
    "metricsEndpoint": "/api/metrics",
    "alertsEndpoint": "/api/alerts",
    "slaEndpoint": "/api/sla"
  },
  "config": {
    "port": 3000,
    "logLevel": "info",
    "metricsInterval": 30000,
    "alertsRetention": "30d",
    "metricsRetention": "90d",
    "backupRetention": "1y"
  }
}
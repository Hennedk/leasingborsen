/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WhyPrivateLeasingRouteImport } from './routes/why-private-leasing'
import { Route as ListingsRouteImport } from './routes/listings'
import { Route as DesignSystemRouteImport } from './routes/design-system'
import { Route as BackgroundRemovalPocRouteImport } from './routes/background-removal-poc'
import { Route as AdvertisingRouteImport } from './routes/advertising'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as ListingIdRouteImport } from './routes/listing.$id'
import { Route as AdminToyotaPdfRouteImport } from './routes/admin/toyota-pdf'
import { Route as AdminSettingsRouteImport } from './routes/admin/settings'
import { Route as AdminSellersRouteImport } from './routes/admin/sellers'
import { Route as AdminListingsRouteImport } from './routes/admin/listings'
import { Route as AdminExtractionSessionsRouteImport } from './routes/admin/extraction-sessions'
import { Route as AdminExtractionRouteImport } from './routes/admin/extraction'
import { Route as AdminDashboardRouteImport } from './routes/admin/dashboard'
import { Route as AdminSellersIndexRouteImport } from './routes/admin/sellers.index'
import { Route as AdminSellersListingsRouteImport } from './routes/admin/sellers.listings'
import { Route as AdminSellersCreateRouteImport } from './routes/admin/sellers.create'
import { Route as AdminListingsCreateRouteImport } from './routes/admin/listings.create'
import { Route as AdminExtractionSessionsSessionIdRouteImport } from './routes/admin/extraction-sessions.$sessionId'
import { Route as AdminSellersEditIdRouteImport } from './routes/admin/sellers.edit.$id'
import { Route as AdminListingsEditIdRouteImport } from './routes/admin/listings.edit.$id'
import { Route as AdminBatchesBatchIdReviewRouteImport } from './routes/admin/batches.$batchId.review'

const WhyPrivateLeasingRoute = WhyPrivateLeasingRouteImport.update({
  id: '/why-private-leasing',
  path: '/why-private-leasing',
  getParentRoute: () => rootRouteImport,
} as any)
const ListingsRoute = ListingsRouteImport.update({
  id: '/listings',
  path: '/listings',
  getParentRoute: () => rootRouteImport,
} as any)
const DesignSystemRoute = DesignSystemRouteImport.update({
  id: '/design-system',
  path: '/design-system',
  getParentRoute: () => rootRouteImport,
} as any)
const BackgroundRemovalPocRoute = BackgroundRemovalPocRouteImport.update({
  id: '/background-removal-poc',
  path: '/background-removal-poc',
  getParentRoute: () => rootRouteImport,
} as any)
const AdvertisingRoute = AdvertisingRouteImport.update({
  id: '/advertising',
  path: '/advertising',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)
const ListingIdRoute = ListingIdRouteImport.update({
  id: '/listing/$id',
  path: '/listing/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminToyotaPdfRoute = AdminToyotaPdfRouteImport.update({
  id: '/toyota-pdf',
  path: '/toyota-pdf',
  getParentRoute: () => AdminRoute,
} as any)
const AdminSettingsRoute = AdminSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AdminRoute,
} as any)
const AdminSellersRoute = AdminSellersRouteImport.update({
  id: '/sellers',
  path: '/sellers',
  getParentRoute: () => AdminRoute,
} as any)
const AdminListingsRoute = AdminListingsRouteImport.update({
  id: '/listings',
  path: '/listings',
  getParentRoute: () => AdminRoute,
} as any)
const AdminExtractionSessionsRoute = AdminExtractionSessionsRouteImport.update({
  id: '/extraction-sessions',
  path: '/extraction-sessions',
  getParentRoute: () => AdminRoute,
} as any)
const AdminExtractionRoute = AdminExtractionRouteImport.update({
  id: '/extraction',
  path: '/extraction',
  getParentRoute: () => AdminRoute,
} as any)
const AdminDashboardRoute = AdminDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AdminRoute,
} as any)
const AdminSellersIndexRoute = AdminSellersIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminSellersRoute,
} as any)
const AdminSellersListingsRoute = AdminSellersListingsRouteImport.update({
  id: '/listings',
  path: '/listings',
  getParentRoute: () => AdminSellersRoute,
} as any)
const AdminSellersCreateRoute = AdminSellersCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AdminSellersRoute,
} as any)
const AdminListingsCreateRoute = AdminListingsCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AdminListingsRoute,
} as any)
const AdminExtractionSessionsSessionIdRoute =
  AdminExtractionSessionsSessionIdRouteImport.update({
    id: '/$sessionId',
    path: '/$sessionId',
    getParentRoute: () => AdminExtractionSessionsRoute,
  } as any)
const AdminSellersEditIdRoute = AdminSellersEditIdRouteImport.update({
  id: '/edit/$id',
  path: '/edit/$id',
  getParentRoute: () => AdminSellersRoute,
} as any)
const AdminListingsEditIdRoute = AdminListingsEditIdRouteImport.update({
  id: '/edit/$id',
  path: '/edit/$id',
  getParentRoute: () => AdminListingsRoute,
} as any)
const AdminBatchesBatchIdReviewRoute =
  AdminBatchesBatchIdReviewRouteImport.update({
    id: '/batches/$batchId/review',
    path: '/batches/$batchId/review',
    getParentRoute: () => AdminRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/admin': typeof AdminRouteWithChildren
  '/advertising': typeof AdvertisingRoute
  '/background-removal-poc': typeof BackgroundRemovalPocRoute
  '/design-system': typeof DesignSystemRoute
  '/listings': typeof ListingsRoute
  '/why-private-leasing': typeof WhyPrivateLeasingRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/extraction': typeof AdminExtractionRoute
  '/admin/extraction-sessions': typeof AdminExtractionSessionsRouteWithChildren
  '/admin/listings': typeof AdminListingsRouteWithChildren
  '/admin/sellers': typeof AdminSellersRouteWithChildren
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/toyota-pdf': typeof AdminToyotaPdfRoute
  '/listing/$id': typeof ListingIdRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/extraction-sessions/$sessionId': typeof AdminExtractionSessionsSessionIdRoute
  '/admin/listings/create': typeof AdminListingsCreateRoute
  '/admin/sellers/create': typeof AdminSellersCreateRoute
  '/admin/sellers/listings': typeof AdminSellersListingsRoute
  '/admin/sellers/': typeof AdminSellersIndexRoute
  '/admin/batches/$batchId/review': typeof AdminBatchesBatchIdReviewRoute
  '/admin/listings/edit/$id': typeof AdminListingsEditIdRoute
  '/admin/sellers/edit/$id': typeof AdminSellersEditIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/advertising': typeof AdvertisingRoute
  '/background-removal-poc': typeof BackgroundRemovalPocRoute
  '/design-system': typeof DesignSystemRoute
  '/listings': typeof ListingsRoute
  '/why-private-leasing': typeof WhyPrivateLeasingRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/extraction': typeof AdminExtractionRoute
  '/admin/extraction-sessions': typeof AdminExtractionSessionsRouteWithChildren
  '/admin/listings': typeof AdminListingsRouteWithChildren
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/toyota-pdf': typeof AdminToyotaPdfRoute
  '/listing/$id': typeof ListingIdRoute
  '/admin': typeof AdminIndexRoute
  '/admin/extraction-sessions/$sessionId': typeof AdminExtractionSessionsSessionIdRoute
  '/admin/listings/create': typeof AdminListingsCreateRoute
  '/admin/sellers/create': typeof AdminSellersCreateRoute
  '/admin/sellers/listings': typeof AdminSellersListingsRoute
  '/admin/sellers': typeof AdminSellersIndexRoute
  '/admin/batches/$batchId/review': typeof AdminBatchesBatchIdReviewRoute
  '/admin/listings/edit/$id': typeof AdminListingsEditIdRoute
  '/admin/sellers/edit/$id': typeof AdminSellersEditIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/admin': typeof AdminRouteWithChildren
  '/advertising': typeof AdvertisingRoute
  '/background-removal-poc': typeof BackgroundRemovalPocRoute
  '/design-system': typeof DesignSystemRoute
  '/listings': typeof ListingsRoute
  '/why-private-leasing': typeof WhyPrivateLeasingRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/extraction': typeof AdminExtractionRoute
  '/admin/extraction-sessions': typeof AdminExtractionSessionsRouteWithChildren
  '/admin/listings': typeof AdminListingsRouteWithChildren
  '/admin/sellers': typeof AdminSellersRouteWithChildren
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/toyota-pdf': typeof AdminToyotaPdfRoute
  '/listing/$id': typeof ListingIdRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/extraction-sessions/$sessionId': typeof AdminExtractionSessionsSessionIdRoute
  '/admin/listings/create': typeof AdminListingsCreateRoute
  '/admin/sellers/create': typeof AdminSellersCreateRoute
  '/admin/sellers/listings': typeof AdminSellersListingsRoute
  '/admin/sellers/': typeof AdminSellersIndexRoute
  '/admin/batches/$batchId/review': typeof AdminBatchesBatchIdReviewRoute
  '/admin/listings/edit/$id': typeof AdminListingsEditIdRoute
  '/admin/sellers/edit/$id': typeof AdminSellersEditIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/admin'
    | '/advertising'
    | '/background-removal-poc'
    | '/design-system'
    | '/listings'
    | '/why-private-leasing'
    | '/admin/dashboard'
    | '/admin/extraction'
    | '/admin/extraction-sessions'
    | '/admin/listings'
    | '/admin/sellers'
    | '/admin/settings'
    | '/admin/toyota-pdf'
    | '/listing/$id'
    | '/admin/'
    | '/admin/extraction-sessions/$sessionId'
    | '/admin/listings/create'
    | '/admin/sellers/create'
    | '/admin/sellers/listings'
    | '/admin/sellers/'
    | '/admin/batches/$batchId/review'
    | '/admin/listings/edit/$id'
    | '/admin/sellers/edit/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/advertising'
    | '/background-removal-poc'
    | '/design-system'
    | '/listings'
    | '/why-private-leasing'
    | '/admin/dashboard'
    | '/admin/extraction'
    | '/admin/extraction-sessions'
    | '/admin/listings'
    | '/admin/settings'
    | '/admin/toyota-pdf'
    | '/listing/$id'
    | '/admin'
    | '/admin/extraction-sessions/$sessionId'
    | '/admin/listings/create'
    | '/admin/sellers/create'
    | '/admin/sellers/listings'
    | '/admin/sellers'
    | '/admin/batches/$batchId/review'
    | '/admin/listings/edit/$id'
    | '/admin/sellers/edit/$id'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/admin'
    | '/advertising'
    | '/background-removal-poc'
    | '/design-system'
    | '/listings'
    | '/why-private-leasing'
    | '/admin/dashboard'
    | '/admin/extraction'
    | '/admin/extraction-sessions'
    | '/admin/listings'
    | '/admin/sellers'
    | '/admin/settings'
    | '/admin/toyota-pdf'
    | '/listing/$id'
    | '/admin/'
    | '/admin/extraction-sessions/$sessionId'
    | '/admin/listings/create'
    | '/admin/sellers/create'
    | '/admin/sellers/listings'
    | '/admin/sellers/'
    | '/admin/batches/$batchId/review'
    | '/admin/listings/edit/$id'
    | '/admin/sellers/edit/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AdminRoute: typeof AdminRouteWithChildren
  AdvertisingRoute: typeof AdvertisingRoute
  BackgroundRemovalPocRoute: typeof BackgroundRemovalPocRoute
  DesignSystemRoute: typeof DesignSystemRoute
  ListingsRoute: typeof ListingsRoute
  WhyPrivateLeasingRoute: typeof WhyPrivateLeasingRoute
  ListingIdRoute: typeof ListingIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/why-private-leasing': {
      id: '/why-private-leasing'
      path: '/why-private-leasing'
      fullPath: '/why-private-leasing'
      preLoaderRoute: typeof WhyPrivateLeasingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/listings': {
      id: '/listings'
      path: '/listings'
      fullPath: '/listings'
      preLoaderRoute: typeof ListingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/design-system': {
      id: '/design-system'
      path: '/design-system'
      fullPath: '/design-system'
      preLoaderRoute: typeof DesignSystemRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/background-removal-poc': {
      id: '/background-removal-poc'
      path: '/background-removal-poc'
      fullPath: '/background-removal-poc'
      preLoaderRoute: typeof BackgroundRemovalPocRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/advertising': {
      id: '/advertising'
      path: '/advertising'
      fullPath: '/advertising'
      preLoaderRoute: typeof AdvertisingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/listing/$id': {
      id: '/listing/$id'
      path: '/listing/$id'
      fullPath: '/listing/$id'
      preLoaderRoute: typeof ListingIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/toyota-pdf': {
      id: '/admin/toyota-pdf'
      path: '/toyota-pdf'
      fullPath: '/admin/toyota-pdf'
      preLoaderRoute: typeof AdminToyotaPdfRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/settings': {
      id: '/admin/settings'
      path: '/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/sellers': {
      id: '/admin/sellers'
      path: '/sellers'
      fullPath: '/admin/sellers'
      preLoaderRoute: typeof AdminSellersRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/listings': {
      id: '/admin/listings'
      path: '/listings'
      fullPath: '/admin/listings'
      preLoaderRoute: typeof AdminListingsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/extraction-sessions': {
      id: '/admin/extraction-sessions'
      path: '/extraction-sessions'
      fullPath: '/admin/extraction-sessions'
      preLoaderRoute: typeof AdminExtractionSessionsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/extraction': {
      id: '/admin/extraction'
      path: '/extraction'
      fullPath: '/admin/extraction'
      preLoaderRoute: typeof AdminExtractionRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/sellers/': {
      id: '/admin/sellers/'
      path: '/'
      fullPath: '/admin/sellers/'
      preLoaderRoute: typeof AdminSellersIndexRouteImport
      parentRoute: typeof AdminSellersRoute
    }
    '/admin/sellers/listings': {
      id: '/admin/sellers/listings'
      path: '/listings'
      fullPath: '/admin/sellers/listings'
      preLoaderRoute: typeof AdminSellersListingsRouteImport
      parentRoute: typeof AdminSellersRoute
    }
    '/admin/sellers/create': {
      id: '/admin/sellers/create'
      path: '/create'
      fullPath: '/admin/sellers/create'
      preLoaderRoute: typeof AdminSellersCreateRouteImport
      parentRoute: typeof AdminSellersRoute
    }
    '/admin/listings/create': {
      id: '/admin/listings/create'
      path: '/create'
      fullPath: '/admin/listings/create'
      preLoaderRoute: typeof AdminListingsCreateRouteImport
      parentRoute: typeof AdminListingsRoute
    }
    '/admin/extraction-sessions/$sessionId': {
      id: '/admin/extraction-sessions/$sessionId'
      path: '/$sessionId'
      fullPath: '/admin/extraction-sessions/$sessionId'
      preLoaderRoute: typeof AdminExtractionSessionsSessionIdRouteImport
      parentRoute: typeof AdminExtractionSessionsRoute
    }
    '/admin/sellers/edit/$id': {
      id: '/admin/sellers/edit/$id'
      path: '/edit/$id'
      fullPath: '/admin/sellers/edit/$id'
      preLoaderRoute: typeof AdminSellersEditIdRouteImport
      parentRoute: typeof AdminSellersRoute
    }
    '/admin/listings/edit/$id': {
      id: '/admin/listings/edit/$id'
      path: '/edit/$id'
      fullPath: '/admin/listings/edit/$id'
      preLoaderRoute: typeof AdminListingsEditIdRouteImport
      parentRoute: typeof AdminListingsRoute
    }
    '/admin/batches/$batchId/review': {
      id: '/admin/batches/$batchId/review'
      path: '/batches/$batchId/review'
      fullPath: '/admin/batches/$batchId/review'
      preLoaderRoute: typeof AdminBatchesBatchIdReviewRouteImport
      parentRoute: typeof AdminRoute
    }
  }
}

interface AdminExtractionSessionsRouteChildren {
  AdminExtractionSessionsSessionIdRoute: typeof AdminExtractionSessionsSessionIdRoute
}

const AdminExtractionSessionsRouteChildren: AdminExtractionSessionsRouteChildren =
  {
    AdminExtractionSessionsSessionIdRoute:
      AdminExtractionSessionsSessionIdRoute,
  }

const AdminExtractionSessionsRouteWithChildren =
  AdminExtractionSessionsRoute._addFileChildren(
    AdminExtractionSessionsRouteChildren,
  )

interface AdminListingsRouteChildren {
  AdminListingsCreateRoute: typeof AdminListingsCreateRoute
  AdminListingsEditIdRoute: typeof AdminListingsEditIdRoute
}

const AdminListingsRouteChildren: AdminListingsRouteChildren = {
  AdminListingsCreateRoute: AdminListingsCreateRoute,
  AdminListingsEditIdRoute: AdminListingsEditIdRoute,
}

const AdminListingsRouteWithChildren = AdminListingsRoute._addFileChildren(
  AdminListingsRouteChildren,
)

interface AdminSellersRouteChildren {
  AdminSellersCreateRoute: typeof AdminSellersCreateRoute
  AdminSellersListingsRoute: typeof AdminSellersListingsRoute
  AdminSellersIndexRoute: typeof AdminSellersIndexRoute
  AdminSellersEditIdRoute: typeof AdminSellersEditIdRoute
}

const AdminSellersRouteChildren: AdminSellersRouteChildren = {
  AdminSellersCreateRoute: AdminSellersCreateRoute,
  AdminSellersListingsRoute: AdminSellersListingsRoute,
  AdminSellersIndexRoute: AdminSellersIndexRoute,
  AdminSellersEditIdRoute: AdminSellersEditIdRoute,
}

const AdminSellersRouteWithChildren = AdminSellersRoute._addFileChildren(
  AdminSellersRouteChildren,
)

interface AdminRouteChildren {
  AdminDashboardRoute: typeof AdminDashboardRoute
  AdminExtractionRoute: typeof AdminExtractionRoute
  AdminExtractionSessionsRoute: typeof AdminExtractionSessionsRouteWithChildren
  AdminListingsRoute: typeof AdminListingsRouteWithChildren
  AdminSellersRoute: typeof AdminSellersRouteWithChildren
  AdminSettingsRoute: typeof AdminSettingsRoute
  AdminToyotaPdfRoute: typeof AdminToyotaPdfRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AdminBatchesBatchIdReviewRoute: typeof AdminBatchesBatchIdReviewRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminDashboardRoute: AdminDashboardRoute,
  AdminExtractionRoute: AdminExtractionRoute,
  AdminExtractionSessionsRoute: AdminExtractionSessionsRouteWithChildren,
  AdminListingsRoute: AdminListingsRouteWithChildren,
  AdminSellersRoute: AdminSellersRouteWithChildren,
  AdminSettingsRoute: AdminSettingsRoute,
  AdminToyotaPdfRoute: AdminToyotaPdfRoute,
  AdminIndexRoute: AdminIndexRoute,
  AdminBatchesBatchIdReviewRoute: AdminBatchesBatchIdReviewRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AdminRoute: AdminRouteWithChildren,
  AdvertisingRoute: AdvertisingRoute,
  BackgroundRemovalPocRoute: BackgroundRemovalPocRoute,
  DesignSystemRoute: DesignSystemRoute,
  ListingsRoute: ListingsRoute,
  WhyPrivateLeasingRoute: WhyPrivateLeasingRoute,
  ListingIdRoute: ListingIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
